<?xml version="1.0" encoding="UTF-8" ?>
<%@  include file="header.jsp" %>
  
<div id="map" style="width: 500px; height: 400px"></div>
<br />
<h3>Excavation Locations </h3>
<p>Note: you can click on any marker to show more info</p>
<ul id="ul_div">
	<s:iterator value="excavations" status="addrStatus" >
		<li class="loc_temp"><s:property value="address" /> (<s:property value="address.loc_lat" />,<s:property value="address.loc_long" />)</li>
	</s:iterator>
</ul>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>	
<script>
var addresses = [
	<s:iterator value="excavations" status="addrStatus" >
	['<s:property value="address" />',<s:property value="address.loc_lat" />,<s:property value="address.loc_long" />,<s:property value="utility_type_id" />,'<s:property value="status" />','<s:property value="permit.company" />','<s:property value="permit_num" />']
	<s:if test="!#addrStatus.last" >,</s:if>
	</s:iterator>
];
var marker = null;
var markers = [];
var map;
var firstTime = true;
var colors = ['gray-dot.png','pink-dot.png','yellow-dot.png','lightblue-dot.png','green-dot.png','red-dot.png','blue-dot.png','purple-dot.png'];
var myStyles =[{
    featureType: "poi",
    elementType: "labels",
    stylers: [{ visibility: "off" }]
}];
var bounds = new google.maps.LatLngBounds();
function setAllMap(map) {
    for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(map);
    }
}

// Removes the markers from the map, but keeps them in the array.
function clearMarkers() {
    setAllMap(null);
}

function initialize() {
	
    var mapOptions = {
		styles: myStyles,
		zoom:16,
		center: new google.maps.LatLng(<s:property value="%{address.loc_lat}" />,<s:property value="%{address.loc_long}" />)
    };
    map = new google.maps.Map(document.getElementById('map'), mapOptions);
	
    placeMarker(addresses, map);
	map.fitBounds(bounds);
	//
	// this is when the user pan or zoom
	//
	google.maps.event.addListener(map, 'idle', function () {
		drawMapFromCurrentBounds(map);
    });
}
  
function placeMarker(locations, map) {
    for(var j=0;j<locations.length;j++){
		var addr = locations[j];
		marker = new google.maps.Marker({
			position: new google.maps.LatLng(addr[1],addr[2]),
			title: addr[0],
			icon: 'http://maps.google.com/mapfiles/ms/icons/'+colors[addr[3]],
			map: map
		});
		attachMessage(marker, addr);
		markers.push(marker);
		bounds.extend(marker.position);
	}
}
function attachMessage(marker, addr) {
    var infowindow = new google.maps.InfoWindow({
		content: addr[6]+"<br />"+addr[5]+"<br />"+addr[4]
    });
	
    google.maps.event.addListener(marker, 'click', function() {
		infowindow.open(marker.get('map'), marker);
    });
}

function drawMapFromCurrentBounds(map) {
    if(firstTime){
		firstTime = false;
		return;
	}
    var bounds = map.getBounds();
    var swp = bounds.getSouthWest();
    var nep = bounds.getNorthEast();
	//
    // get lat/longs 
    var lat_from = swp.lat();
    var long_from = swp.lng();
    var lat_to = nep.lat();
    var long_to = nep.lng();
	//
	// delete old markers from the map
	clearMarkers();
	//
	markers.splice(0,markers.length); // remove all
	//
	// we need to delete the old list items
	// and add the new ones
	//
	$('li').remove(); // removes all li tags
	var url = "<s:property value='#application.url' />ExcavationService?lat_from="+lat_from+"&long_from="+long_from+"&lat_to="+lat_to+"&long_to="+long_to;
	$.getJSON(url, function (data) {
		for(var j=0;j<data.length;j++){
			var cut = data[j];
			marker = new google.maps.Marker({
				position: new google.maps.LatLng(cut.loc_lat,cut.loc_long),
				title: cut.address,
				icon: 'http://maps.google.com/mapfiles/ms/icons/'+colors[cut.utility_type_id],
				map: map
			}); 
			attachMessage2(marker, cut);
			var listItem= "<li>"+cut.address+" ("+cut.loc_lat+" "+cut.loc_long+")</li>";
			
			$("#ul_div").append(listItem);
			markers.push(marker);
		} // end of loop
	}) // end of $.getJSON
}	
function attachMessage2(marker, cut) {
    var infowindow = new google.maps.InfoWindow({
		content: cut.address+"<br />"+cut.permit_num+"<br />"+cut.status
    });
    google.maps.event.addListener(marker, 'click', function() {
		infowindow.open(marker.get('map'), marker);
	});
}
  
google.maps.event.addDomListener(window, 'load', initialize);  

</script>  

<%@  include file="footer.jsp" %>
























































